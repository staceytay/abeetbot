
(* id	Integer	Unique identifier for this chat, not exceeding 1e13 by absolute value *)
(* type	String	Type of chat, can be either “private”, “group”, “supergroup” or “channel” *)
(* title	String	Optional. Title, for channels and group chats *)
(* username	String	Optional. Username, for private chats and channels if available *)
(* first_name	String	Optional. First name of the other party in a private chat *)
(* last_name	String	Optional. Last name of the other party in a private chat *)

type chat_type = [
    Private <json name="private">
  | Group <json name="group">
  | Supergroup <json name="supergroup">
  | Channel <json name="channel">
]

type chat = {
    id: int;
    chat_type: string;
    ?title: string option;
    ?username: string option;
    ?first_name: string option;
    ?last_name: string option;
}

(* Field	Type	Description *)
(* message_id	Integer	Unique message identifier *)
(* from	User	Optional. Sender, can be empty for messages sent to channels *)
(* date	Integer	Date the message was sent in Unix time *)
(* chat	Chat	Conversation the message belongs to *)
(* forward_from	User	Optional. For forwarded messages, sender of the original message *)
(* forward_date	Integer	Optional. For forwarded messages, date the original message was sent in Unix time *)
(* reply_to_message	Message	Optional. For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply. *)
(* text	String	Optional. For text messages, the actual UTF-8 text of the message, 0-4096 characters. *)
(* audio	Audio	Optional. Message is an audio file, information about the file *)
(* document	Document	Optional. Message is a general file, information about the file *)
(* photo	Array of PhotoSize	Optional. Message is a photo, available sizes of the photo *)
(* sticker	Sticker	Optional. Message is a sticker, information about the sticker *)
(* video	Video	Optional. Message is a video, information about the video *)
(* voice	Voice	Optional. Message is a voice message, information about the file *)
(* caption	String	Optional. Caption for the photo or video, 0-200 characters *)
(* contact	Contact	Optional. Message is a shared contact, information about the contact *)
(* location	Location	Optional. Message is a shared location, information about the location *)
(* new_chat_participant	User	Optional. A new member was added to the group, information about them (this member may be the bot itself) *)
(* left_chat_participant	User	Optional. A member was removed from the group, information about them (this member may be the bot itself) *)
(* new_chat_title	String	Optional. A chat title was changed to this value *)
(* new_chat_photo	Array of PhotoSize	Optional. A chat photo was change to this value *)
(* delete_chat_photo	True	Optional. Service message: the chat photo was deleted *)
(* group_chat_created	True	Optional. Service message: the group has been created *)
(* supergroup_chat_created	True	Optional. Service message: the supergroup has been created *)
(* channel_chat_created	True	Optional. Service message: the channel has been created *)
(* migrate_to_chat_id	Integer	Optional. The group has been migrated to a supergroup with the specified identifier, not exceeding 1e13 by absolute value *)
(* migrate_from_chat_id	Integer	Optional. The supergroup has been migrated from a group with the specified identifier, not exceeding 1e13 by absolute value *)

type chat_message = {
    message_id: int;
    from: user;
    unixtime <json name="date">: int;
    chat: chat;
    text: string;
}

type message = [
    Chat of chat
  | Message of chat_message
  | User of user
] <ocaml repr="classic">
(*     Field	Type	Description *)
(* id	Integer	Unique identifier for this user or bot *)
(* first_name	String	User‘s or bot’s first name *)
(* last_name	String	Optional. User‘s or bot’s last name *)
(* username	String	Optional. User‘s or bot’s username *)
type update = {
    update_id: int;
    ?message: message option;
}

type user = {
    id: int;
    first_name: string;
    ?last_name: string option;
    ?username: string option;
}

